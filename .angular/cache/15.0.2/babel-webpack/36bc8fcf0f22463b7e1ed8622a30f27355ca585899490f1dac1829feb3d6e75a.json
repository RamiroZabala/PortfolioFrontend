{"ast":null,"code":"import { DynamicComponentDirective } from 'src/app/directives/dynamic-component.directive';\nimport { WorkProjectItemComponent } from '../work-project-item/work-project-item.component';\nimport { IsLogin } from 'src/app/config/config-data';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/workproject-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../manage-buttons/manage-buttons.component\";\nimport * as i4 from \"../../../directives/dynamic-component.directive\";\nimport * as i5 from \"../../modal/form-workproject/form-workproject.component\";\nfunction WorkProjectListComponent_app_manage_buttons_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-manage-buttons\", 6);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"button_add\", true)(\"modal_id_add\", \"workprojectModal\");\n  }\n}\nfunction WorkProjectListComponent_ng_template_6_Template(rf, ctx) {}\nfunction WorkProjectListComponent_app_form_workproject_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-form-workproject\");\n  }\n}\nexport class WorkProjectListComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.is_login = IsLogin.IS_LOGIN;\n    this.childComponents = [];\n    this.subscription = new Subscription();\n  }\n  ngAfterViewInit() {\n    this.getData();\n    this.subscription = this.dataService.refresh$.subscribe(() => {\n      this.getData();\n    });\n  }\n  generateChildComponents() {\n    const viewContainerRef = this.dynamic.viewContainerRef;\n    let isEven = false;\n    this.data.forEach(child => {\n      const containerRef = viewContainerRef.createComponent(WorkProjectItemComponent);\n      containerRef.instance.is_even = isEven;\n      isEven = !isEven;\n      containerRef.instance.id = child.id;\n      containerRef.instance.title = child.title;\n      containerRef.instance.description = child.description;\n      containerRef.instance.period = child.period;\n      containerRef.instance.img = child.img;\n      containerRef.instance.url = child.url;\n      containerRef.instance.is_login = this.is_login;\n      this.deleteItem = this.deleteItem.bind(this); ///////*\n      containerRef.instance.onDelete = this.deleteItem;\n      const i = this.childComponents.findIndex(c => c.instance.id === child.id);\n      if (i !== -1) {\n        this.childComponents[i].destroy();\n        this.childComponents.splice(i, 1);\n      }\n      this.childComponents.push(containerRef);\n    });\n  }\n  getData() {\n    this.dataService.getWorkProjectData().subscribe({\n      next: resp => {\n        this.data = resp;\n        //console.log(\"WorkProjectList -> Work Project: \"+JSON.stringify(this.data));\n        console.log(\"WorkProjectList -> OK\");\n        this.generateChildComponents();\n      },\n      error: error => {\n        console.error(error);\n      }\n    });\n  }\n  deleteItem(id) {\n    this.dataService.deleteWorkProject(id).subscribe(resp => {\n      console.log(\"deleteWorkProyect(): ERROR -> \" + resp);\n      // Filtro el array de componentes para encontrar el índice del componente con el id especificado\n      const index = this.childComponents.findIndex(c => c.instance.id === id);\n      // Si se encontró el componente, lo elimino\n      if (index !== -1) {\n        this.childComponents[index].destroy();\n        this.childComponents.splice(index, 1);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function WorkProjectListComponent_Factory(t) {\n    return new (t || WorkProjectListComponent)(i0.ɵɵdirectiveInject(i1.WorkProjectDataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkProjectListComponent,\n    selectors: [[\"app-work-project-list\"]],\n    viewQuery: function WorkProjectListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DynamicComponentDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamic = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[\"id\", \"WorkProject\", 1, \"row\"], [\"style\", \"right:1em;\", \"class\", \"pRelative\", 3, \"button_add\", \"modal_id_add\", 4, \"ngIf\"], [1, \"mt-4\"], [\"childContainer\", \"\"], [\"appDynamicComponent\", \"\"], [4, \"ngIf\"], [1, \"pRelative\", 2, \"right\", \"1em\", 3, \"button_add\", \"modal_id_add\"]],\n    template: function WorkProjectListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"TRABAJOS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, WorkProjectListComponent_app_manage_buttons_3_Template, 1, 2, \"app-manage-buttons\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2, 3);\n        i0.ɵɵtemplate(6, WorkProjectListComponent_ng_template_6_Template, 0, 0, \"ng-template\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, WorkProjectListComponent_app_form_workproject_7_Template, 1, 0, \"app-form-workproject\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.is_login);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.is_login);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ManageButtonsComponent, i4.DynamicComponentDirective, i5.FormWorkprojectComponent],\n    encapsulation: 2\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}