{"ast":null,"code":"import { Subject, tap } from 'rxjs';\nimport { ApiServerUrl } from '../config/config-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EducationDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    this._refresh$ = new Subject();\n  }\n  get refresh$() {\n    return this._refresh$;\n  }\n  getEducationData() {\n    return this.httpC.get(ApiServerUrl.API_SERVER_GET + \"education\").pipe(tap(data => console.log('Education -> GET -> OK', data)));\n  }\n  deleteEducation(id) {\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE + \"education/\" + id).pipe(tap(data => console.log('Education -> DELETE -> OK', data)));\n  }\n  addEducation(body) {\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW + \"education\", body).pipe(tap(() => {\n      this._refresh$.next();\n      console.log('Education -> POST -> OK', body);\n    }));\n  }\n  static #_ = this.ɵfac = function EducationDataService_Factory(t) {\n    return new (t || EducationDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EducationDataService,\n    factory: EducationDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,EAAEC,GAAG,QAAO,MAAM;AAE9C,SAASC,YAAY,QAAQ,uBAAuB;;;AAKpD,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IANjB,cAAS,GAAG,IAAIL,OAAO,EAAQ;EAMC;EAJxC,IAAIM,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAIAC,gBAAgB;IACd,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAYP,YAAY,CAACQ,cAAc,GAAC,WAAW,CAAC,CACtEC,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC,CAAC,CAAC;EACnE;EACAG,eAAe,CAACC,EAAS;IACvB,OAAO,IAAI,CAACX,KAAK,CAACY,MAAM,CAACf,YAAY,CAACgB,iBAAiB,GAAC,YAAY,GAACF,EAAE,CAAC,CACtEL,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,IAAI,CAAC,CAAC,CAAC;EACrE;EACAO,YAAY,CAACC,IAAc;IACzB,OAAO,IAAI,CAACf,KAAK,CAACgB,IAAI,CAACnB,YAAY,CAACoB,cAAc,GAAC,WAAW,EAAEF,IAAI,CAAC,CACpET,IAAI,CACHV,GAAG,CAAC,MAAK;MACP,IAAI,CAACM,SAAS,CAACgB,IAAI,EAAE;MACrBV,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEM,IAAI,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EAAC;qBAzBUjB,oBAAoB;EAAA;EAAA;WAApBA,oBAAoB;IAAAqB,SAApBrB,oBAAoB;IAAAsB,YAFnB;EAAM","names":["Subject","tap","ApiServerUrl","EducationDataService","constructor","httpC","refresh$","_refresh$","getEducationData","get","API_SERVER_GET","pipe","data","console","log","deleteEducation","id","delete","API_SERVER_DELETE","addEducation","body","post","API_SERVER_NEW","next","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/PortfolioFrontend/src/app/services/education-data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, tap} from 'rxjs';\nimport { Education } from '../models/models';\nimport { ApiServerUrl } from '../config/config-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EducationDataService {\n  private _refresh$ = new Subject<void>();\n\n  get refresh$(){\n    return this._refresh$;\n  }\n  \n  constructor(private httpC:HttpClient) { }\n\n  getEducationData():Observable<any>{\n    return this.httpC.get<Education>(ApiServerUrl.API_SERVER_GET+\"education\")\n      .pipe(tap(data => console.log('Education -> GET -> OK', data)))\n  }\n  deleteEducation(id:number):Observable<any>{\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE+\"education/\"+id)\n     .pipe(tap(data => console.log('Education -> DELETE -> OK', data)))\n  }\n  addEducation(body:Education):Observable<any>{\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW+\"education\", body)\n    .pipe(\n      tap(() => {\n        this._refresh$.next();\n        console.log('Education -> POST -> OK', body);\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}