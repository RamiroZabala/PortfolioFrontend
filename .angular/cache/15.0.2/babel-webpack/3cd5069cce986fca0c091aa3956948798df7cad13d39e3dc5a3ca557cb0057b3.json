{"ast":null,"code":"import { Subject, tap } from 'rxjs';\nimport { ApiServerUrl } from '../config/config-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    this._refresh$ = new Subject();\n  }\n  get refresh$() {\n    return this._refresh$;\n  }\n  getData() {\n    //return this.httpC.get('./assets/data/about.json');\n    return this.httpC.get(ApiServerUrl.API_SERVER_GET + \"person\").pipe(tap(data => console.log('Person -> GET -> OK', data)));\n  }\n  addPerson(body) {\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW + \"person\", body).pipe(tap(() => {\n      this._refresh$.next();\n      console.log('Person -> POST -> OK', body);\n    }));\n  }\n  static #_ = this.ɵfac = function PersonDataService_Factory(t) {\n    return new (t || PersonDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PersonDataService,\n    factory: PersonDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,EAAgBC,GAAG,QAAO,MAAM;AAE5D,SAASC,YAAY,QAAQ,uBAAuB;;;AAKpD,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IAFjB,cAAS,GAAG,IAAIL,OAAO,EAAQ;EAEC;EAExC,IAAIM,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAEAC,OAAO;IACL;IACA,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAASP,YAAY,CAACQ,cAAc,GAAC,QAAQ,CAAC,CAChEC,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC,CAAC,CAAC;EAChE;EACAG,SAAS,CAACC,IAAW;IACnB,OAAO,IAAI,CAACX,KAAK,CAACY,IAAI,CAACf,YAAY,CAACgB,cAAc,GAAC,QAAQ,EAAEF,IAAI,CAAC,CAC/DL,IAAI,CACHV,GAAG,CAAC,MAAK;MACP,IAAI,CAACM,SAAS,CAACY,IAAI,EAAE;MACrBN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,IAAI,CAAC;IAC3C,CAAC,CAAC,CACH;EACL;EAAC;qBAvBUb,iBAAiB;EAAA;EAAA;WAAjBA,iBAAiB;IAAAiB,SAAjBjB,iBAAiB;IAAAkB,YAFhB;EAAM","names":["Subject","tap","ApiServerUrl","PersonDataService","constructor","httpC","refresh$","_refresh$","getData","get","API_SERVER_GET","pipe","data","console","log","addPerson","body","post","API_SERVER_NEW","next","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/PortfolioFrontend/src/app/services/person-data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscription, tap} from 'rxjs';\nimport { Person } from '../models/models';\nimport { ApiServerUrl } from '../config/config-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonDataService {\n\n  private _refresh$ = new Subject<void>();\n\n  constructor(private httpC:HttpClient) { }\n\n  get refresh$(){\n    return this._refresh$;\n  }\n\n  getData():Observable<any>{\n    //return this.httpC.get('./assets/data/about.json');\n    return this.httpC.get<Person>(ApiServerUrl.API_SERVER_GET+\"person\")\n      .pipe(tap(data => console.log('Person -> GET -> OK', data)))\n  };\n  addPerson(body:Person):Observable<any>{\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW+\"person\", body)\n      .pipe(\n        tap(() => {\n          this._refresh$.next();\n          console.log('Person -> POST -> OK', body);\n        })\n      )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}