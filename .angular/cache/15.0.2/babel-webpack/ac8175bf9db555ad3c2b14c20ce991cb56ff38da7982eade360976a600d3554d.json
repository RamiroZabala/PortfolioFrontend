{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/data-skill.service\";\nimport * as i3 from \"@angular/common\";\nfunction FormSkillComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const o_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", o_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(o_r4.label);\n  }\n}\nfunction FormSkillComponent_div_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" La Categor\\u00EDa es requerida \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormSkillComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormSkillComponent_div_13_p_1_Template, 2, 0, \"p\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Category == null ? null : ctx_r1.Category.hasError(\"required\"));\n  }\n}\nfunction FormSkillComponent_div_18_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" El Titulo es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormSkillComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormSkillComponent_div_18_p_1_Template, 2, 0, \"p\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.SkillName == null ? null : ctx_r2.SkillName.hasError(\"required\"));\n  }\n}\nfunction FormSkillComponent_div_23_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" El valor es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormSkillComponent_div_23_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \" El valor no puede contener mas de 3 caracteres numericos \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormSkillComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormSkillComponent_div_23_p_1_Template, 2, 0, \"p\", 22);\n    i0.ɵɵtemplate(2, FormSkillComponent_div_23_p_2_Template, 2, 0, \"p\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.Value == null ? null : ctx_r3.Value.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.Value == null ? null : ctx_r3.Value.hasError(\"maxlength\"));\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\nexport class FormSkillComponent {\n  //\n  constructor(formBuilder, dataService) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.category = \"\";\n    this.type = \"\";\n    this.categoryDisabled = true;\n    //\n    this.modalId = \"skillModal\";\n    this.modalTitle = \"Agregar Educación\";\n    this.modalSubmitText = \"Guardar\";\n    // DEFAULTS FORM INPUTS VALUES\n    this.entryId = -1;\n    this.skillname = \"\";\n    this.value = 100;\n    this.Form = new FormGroup({});\n    this.selectOptions = [];\n  }\n  //\n  ngOnInit() {\n    if (this.type === \"HARD\") {\n      this.selectOptions = [{\n        label: 'Frontend',\n        value: 'Frontend'\n      }, {\n        label: 'Backend',\n        value: 'Backend'\n      }, {\n        label: 'Others',\n        value: 'Others'\n      }];\n    } else {\n      this.selectOptions = [{\n        label: 'Soft',\n        value: 'Soft'\n      }, {\n        label: 'Language',\n        value: 'Language'\n      }];\n    }\n    if (this.category) {\n      this.category = this.category.trim();\n    } else {\n      this.category = 'Others';\n    }\n    if (this.type) {\n      this.type = this.type.trim();\n    } else {\n      this.type = 'SOFT';\n    }\n    this.Form = this.formBuilder.group({\n      //aca.....\n      form_skillname: [this.skillname, [Validators.required]],\n      form_category: [{\n        value: this.category,\n        disabled: this.categoryDisabled\n      }, [Validators.required]],\n      form_value: [this.value, [Validators.required, Validators.maxLength]],\n      //\n      deviceInfo: this.formBuilder.group({\n        deviceId: [\"\"],\n        deviceType: [\"DEVICE_TYPE_ANDROID\"],\n        notificationToken: [\"\"]\n      })\n    });\n  }\n  //\n  get SkillName() {\n    return this.Form.get(\"form_skillname\");\n  }\n  get Category() {\n    return this.Form.get(\"form_category\");\n  }\n  get Value() {\n    return this.Form.get(\"form_value\");\n  }\n  get FormValid() {\n    return !this.Form.get(\"form_skillname\")?.errors && !this.Form.get(\"form_category\")?.errors && !this.Form.get(\"form_value\")?.errors;\n  }\n  //\n  onSend(event) {\n    event.preventDefault();\n    const body = {\n      id: this.entryId,\n      skillname: this.Form.get('form_skillname')?.value,\n      category: this.Form.get('form_category')?.value,\n      value: this.Form.get('form_value')?.value\n    };\n    if (this.type === \"HARD\") {\n      this.dataService.addHardSkill(body).subscribe(data => {\n        console.log(\"DATA:\" + JSON.stringify(data));\n      });\n    } else {\n      this.dataService.addSoftSkill(body).subscribe(data => {\n        console.log(\"DATA:\" + JSON.stringify(data));\n      });\n    }\n  }\n  static #_ = this.ɵfac = function FormSkillComponent_Factory(t) {\n    return new (t || FormSkillComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SkillDataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormSkillComponent,\n    selectors: [[\"app-form-skill\"]],\n    inputs: {\n      category: \"category\",\n      type: \"type\",\n      categoryDisabled: \"categoryDisabled\",\n      modalId: \"modalId\",\n      modalTitle: \"modalTitle\",\n      modalSubmitText: \"modalSubmitText\",\n      entryId: \"entryId\",\n      skillname: \"skillname\",\n      value: \"value\"\n    },\n    decls: 31,\n    vars: 18,\n    consts: [[\"tabindex\", \"-1\", \"aria-labelledby\", \"skillModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", 3, \"id\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"skillModalLabel\", 1, \"modal-title\", \"fs-5\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"form2Example2\", 1, \"form-label\"], [\"id\", \"form2Example2\", \"formControlName\", \"form_category\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"for\", \"form2Example1\", 1, \"form-label\"], [\"required\", \"\", \"formControlName\", \"form_skillname\", \"type\", \"text\", \"id\", \"form2Example1\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"form2Example3\", 1, \"form-label\"], [\"required\", \"\", \"max\", \"100\", \"min\", \"0\", \"formControlName\", \"form_value\", \"type\", \"number\", \"id\", \"form2Example3\", \"maxlength\", \"3\", 1, \"form-control\", 3, \"ngClass\"], [1, \"row\"], [1, \"col-sm-4\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"button\", \"button-full\", \"button-cancel\"], [1, \"col-sm-8\"], [\"type\", \"submit\", \"data-dismiss\", \"modal\", 1, \"button\", \"button-full\", 3, \"disabled\"], [3, \"value\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function FormSkillComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function FormSkillComponent_Template_form_ngSubmit_7_listener($event) {\n          return ctx.onSend($event);\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Categor\\u00EDa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 9);\n        i0.ɵɵtemplate(12, FormSkillComponent_option_12_Template, 2, 2, \"option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, FormSkillComponent_div_13_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Skill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵtemplate(18, FormSkillComponent_div_18_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Valor (?/100)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 15);\n        i0.ɵɵtemplate(23, FormSkillComponent_div_23_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 16)(25, \"div\", 17)(26, \"button\", 18);\n        i0.ɵɵtext(27, \"Cancelar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 19)(29, \"button\", 20);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.modalId);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate2(\"Agregar \", ctx.type, \" Skill / \", ctx.category, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.Form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Category == null ? null : ctx.Category.errors) && (ctx.Category == null ? null : ctx.Category.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c0, (ctx.SkillName == null ? null : ctx.SkillName.errors) && (ctx.SkillName == null ? null : ctx.SkillName.touched), (ctx.SkillName == null ? null : ctx.SkillName.errors) && (ctx.SkillName == null ? null : ctx.SkillName.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.SkillName == null ? null : ctx.SkillName.errors) && (ctx.SkillName == null ? null : ctx.SkillName.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(15, _c0, (ctx.Value == null ? null : ctx.Value.errors) && (ctx.Value == null ? null : ctx.Value.touched), (ctx.Value == null ? null : ctx.Value.errors) && (ctx.Value == null ? null : ctx.Value.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Value == null ? null : ctx.Value.errors) && (ctx.Value == null ? null : ctx.Value.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !ctx.FormValid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.modalSubmitText);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.MaxValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"#skillModalLabel[_ngcontent-%COMP%], .modal-title[_ngcontent-%COMP%] {\\n    text-transform: lowercase!important;\\n    text-transform: capitalize!important;\\n}\\n/*# sourceURL=webpack://./src/app/components/modal/form-skill/form-skill.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9mb3JtLXNraWxsL2Zvcm0tc2tpbGwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxtQ0FBbUM7SUFDbkMsb0NBQW9DO0FBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiI3NraWxsTW9kYWxMYWJlbCxcbi5tb2RhbC10aXRsZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZSFpbXBvcnRhbnQ7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","i0","FormSkillComponent","constructor","formBuilder","dataService","ngOnInit","type","selectOptions","label","value","category","trim","Form","group","form_skillname","skillname","required","form_category","disabled","categoryDisabled","form_value","maxLength","deviceInfo","deviceId","deviceType","notificationToken","SkillName","get","Category","Value","FormValid","errors","onSend","event","preventDefault","body","id","entryId","addHardSkill","subscribe","data","console","log","JSON","stringify","addSoftSkill","selectors","inputs","modalId","modalTitle","modalSubmitText","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/run/media/ramiro/Datos2/ArgentinaPrograma/Portfolio/Frontend/src/app/components/modal/form-skill/form-skill.component.ts","/run/media/ramiro/Datos2/ArgentinaPrograma/Portfolio/Frontend/src/app/components/modal/form-skill/form-skill.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { SkillDataService } from 'src/app/services/data-skill.service';\n\n@Component({\n  selector: 'app-form-skill',\n  templateUrl: './form-skill.component.html',\n  styleUrls: ['./form-skill.component.css']\n\n})\n\nexport class FormSkillComponent implements OnInit{\n  @Input() category:String = \"\";\n  @Input() type:String = \"\";\n  @Input() categoryDisabled:Boolean = true;\n  //\n  @Input() modalId = \"skillModal\";\n  @Input() modalTitle = \"Agregar Educación\";\n  @Input() modalSubmitText = \"Guardar\";\n  // DEFAULTS FORM INPUTS VALUES\n  @Input() entryId:Number = -1;\n  @Input() skillname:String = \"\";\n  @Input() value:Number = 100;\n\n  Form:FormGroup = new FormGroup({});;\n  selectOptions: Array<{ label: string, value: string }> = [];\n\n  //\n  constructor(\n    private formBuilder:FormBuilder,\n    private dataService:SkillDataService){\n    }\n  //\n  ngOnInit(): void {\n      if(this.type===\"HARD\"){\n        this.selectOptions = [\n          { label: 'Frontend', value: 'Frontend' },\n          { label: 'Backend', value: 'Backend' },\n          { label: 'Others', value: 'Others' }\n        ];\n      }\n      else{\n        this.selectOptions = [\n          { label: 'Soft', value: 'Soft' },\n          { label: 'Language', value: 'Language' }\n        ]\n      }\n      if (this.category) {this.category = this.category.trim();} else {this.category = 'Others';}\n      if (this.type) {this.type = this.type.trim();} else {this.type = 'SOFT';}\n      this.Form=this.formBuilder.group(\n        {\n          //aca.....\n          form_skillname:[this.skillname,                       [Validators.required]],\n          form_category:[{value:this.category, disabled: this.categoryDisabled}, [Validators.required]],\n          form_value:[this.value,                               [Validators.required, Validators.maxLength]],\n          //\n          deviceInfo:this.formBuilder.group({deviceId:[\"\"], deviceType:[\"DEVICE_TYPE_ANDROID\"], notificationToken:[\"\"]\n          })\n        }\n      )\n  }\n  //\n  get SkillName(){\n    return this.Form.get(\"form_skillname\");\n  }\n  get Category(){\n    return this.Form.get(\"form_category\");\n  }\n  get Value(){\n    return this.Form.get(\"form_value\");\n  }\n  get FormValid(){\n    return (!this.Form.get(\"form_skillname\")?.errors && !this.Form.get(\"form_category\")?.errors && !this.Form.get(\"form_value\")?.errors);\n  }\n  //\n  onSend(event:Event){\n    event.preventDefault();\n    const body = {\n      id:this.entryId,\n      skillname:this.Form.get('form_skillname')?.value,\n      category:this.Form.get('form_category')?.value,\n      value:this.Form.get('form_value')?.value }\n    if(this.type===\"HARD\"){\n      this.dataService.addHardSkill(body).subscribe((data:any)=>{\n        console.log(\"DATA:\" + JSON.stringify(data));\n      })\n    }\n    else {\n      this.dataService.addSoftSkill(body).subscribe((data:any)=>{\n        console.log(\"DATA:\" + JSON.stringify(data));\n      })\n    }\n  }\n}\n","<div class=\"modal fade\" id={{modalId}} tabindex=\"-1\" aria-labelledby=\"skillModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"skillModalLabel\">Agregar {{this.type}} Skill / {{this.category}}</h1>\n        </div>\n        <div class=\"modal-body\">\n            <form [formGroup]=\"Form\" (ngSubmit)=\"onSend($event)\"> \n                <!-- Category -->\n                <div class=\"form-outline mb-4\">\n                    <label class=\"form-label\" for=\"form2Example2\">Categoría</label>\n                    <select id=\"form2Example2\" formControlName=\"form_category\" class=\"form-control\"> \n                        <option *ngFor=\"let o of selectOptions\" [value]=\"o.value\">{{ o.label }}</option>\n                    </select>\n                    <!--input required\n                        formControlName=\"form_category\" type=\"text\" id=\"form2Example2\" class=\"form-control\"\n                        [ngClass]=\"{'is-invalid': Category?.errors && Category?.touched, 'is-valid':Category?.errors && Category?.touched}\"\n                    -->\n                    <div *ngIf=\"Category?.errors && Category?.touched\">\n                        <p *ngIf=\"Category?.hasError('required')\" class=\"text-danger\">\n                            La Categoría es requerida\n                        </p>\n                    </div>\n                </div>\n                <!-- Title -->\n                <div class=\"form-outline mb-4\">\n                    <label class=\"form-label\" for=\"form2Example1\">Skill</label>\n                    <input required\n                        formControlName=\"form_skillname\" type=\"text\" id=\"form2Example1\" class=\"form-control\"\n                        [ngClass]=\"{'is-invalid': SkillName?.errors && SkillName?.touched, 'is-valid':SkillName?.errors && SkillName?.touched}\"\n                    >\n                    <div *ngIf=\"SkillName?.errors && SkillName?.touched\">\n                        <p *ngIf=\"SkillName?.hasError('required')\" class=\"text-danger\">\n                            El Titulo es requerido\n                        </p>\n                    </div>\n                </div>\n                <!-- Value -->\n                <div class=\"form-outline mb-4\">\n                    <label class=\"form-label\" for=\"form2Example3\">Valor (?/100)</label>\n                    <input required max=\"100\" min=\"0\"\n                        formControlName=\"form_value\" type=\"number\" id=\"form2Example3\" class=\"form-control\"\n                        [ngClass]=\"{'is-invalid': Value?.errors && Value?.touched, 'is-valid':Value?.errors && Value?.touched}\"\n                        maxlength=\"3\"\n                    >\n                    <div *ngIf=\"Value?.errors && Value?.touched\">\n                        <p *ngIf=\"Value?.hasError('required')\" class=\"text-danger\">\n                            El valor es requerido\n                        </p>\n                        <p *ngIf=\"Value?.hasError('maxlength')\" class=\"text-danger\">\n                            El valor no puede contener mas de 3 caracteres numericos\n                        </p>\n                    </div>\n                </div>\n                <!-- Submit -->\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <button type=\"button\" class=\"button button-full button-cancel\" data-bs-dismiss=\"modal\" aria-label=\"Close\">Cancelar</button>\n                    </div>\n                    <div class=\"col-sm-8\">\n                        <button [disabled]=\"!FormValid\" type=\"submit\" class=\"button button-full\" data-dismiss=\"modal\">{{modalSubmitText}}</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n      </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}