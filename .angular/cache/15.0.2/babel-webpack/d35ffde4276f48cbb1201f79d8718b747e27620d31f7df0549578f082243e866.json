{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nexport class AppConfig {\n  constructor(autenticationService) {\n    this.autenticationService = autenticationService;\n    this.accessToken = this.autenticationService.getToken();\n  }\n  static #_ = this.API_SERVER = \"http://localhost:8080/api/\";\n  static #_2 = this.API_SERVER_GET = `${this.API_SERVER}get/`;\n  static #_3 = this.API_SERVER_DELETE = `${this.API_SERVER}delete/`;\n  static #_4 = this.API_SERVER_NEW = `${this.API_SERVER}new/`;\n  static #_5 = this.API_SERVER_LOGIN = `${this.API_SERVER}login/`;\n  static #_6 = this.HTTP_HEADER = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n    })\n  };\n  static #_7 = this.HTTP_HEADER_CRED = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n    }),\n    withCredentials: true\n  };\n  static #_8 = this.HTTP_HEADER_TOKEN = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.autenticationService.getToken() // si estás usando JWT\n    }),\n\n    withCredentials: true\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,sBAAsB;AAGlD,OAAM,MAAOC,SAAS;EAClBC,YAAoBC,oBAA8C;IAA9C,yBAAoB,GAApBA,oBAAoB;IAEhC,gBAAW,GAAG,IAAI,CAACA,oBAAoB,CAACC,QAAQ,EAAE;EAFY;EAAC,YAIhD,eAAU,GAAW,4BAA4B;EAAA,aACjD,mBAAc,GAAW,GAAG,IAAI,CAACC,UAAU,MAAM;EAAA,aACjD,sBAAiB,GAAW,GAAG,IAAI,CAACA,UAAU,SAAS;EAAA,aACvD,mBAAc,GAAW,GAAG,IAAI,CAACA,UAAU,MAAM;EAAA,aACjD,qBAAgB,GAAW,GAAG,IAAI,CAACA,UAAU,QAAQ;EAAA,aAGrD,gBAAW,GAAG;IACjCC,OAAO,EAAE,IAAIN,WAAW,CAAC;MACrB,6BAA6B,EAAE,GAAG;MAClC,8BAA8B,EAAE;KACnC;GACJ;EAAA,aACsB,qBAAgB,GAAG;IACtCM,OAAO,EAAE,IAAIN,WAAW,CAAC;MACrB,6BAA6B,EAAE,GAAG;MAClC,8BAA8B,EAAE;KACnC,CAAC;IACFO,eAAe,EAAE;GACpB;EAAA,aACsB,sBAAiB,GAAG;IACvCD,OAAO,EAAE,IAAIN,WAAW,CAAC;MACvB,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAE,SAAS,GAAG,IAAI,CAACL,oBAAoB,CAACC,QAAQ,EAAE,CAAC;KACjE,CAAC;;IACFG,eAAe,EAAE;GAClB","names":["HttpHeaders","AppConfig","constructor","autenticationService","getToken","API_SERVER","headers","withCredentials","Authorization"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/config/api-server.ts"],"sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { AuthenticationDataService } from '../services/authentication-data.service';\n\nexport class AppConfig {\n    constructor(private autenticationService:AuthenticationDataService) { }\n\n    private accessToken = this.autenticationService.getToken();\n\n    public static readonly API_SERVER: string = \"http://localhost:8080/api/\";\n    public static readonly API_SERVER_GET: string = `${this.API_SERVER}get/`;\n    public static readonly API_SERVER_DELETE: string = `${this.API_SERVER}delete/`;\n    public static readonly API_SERVER_NEW: string = `${this.API_SERVER}new/`;\n    public static readonly API_SERVER_LOGIN: string = `${this.API_SERVER}login/`;\n\n\n    public static readonly HTTP_HEADER = {\n        headers: new HttpHeaders({\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n        })\n    };\n    public static readonly HTTP_HEADER_CRED = {\n        headers: new HttpHeaders({\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n        }),\n        withCredentials: true\n    };\n    public static readonly HTTP_HEADER_TOKEN = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.autenticationService.getToken() // si estás usando JWT\n        }),\n        withCredentials: true\n      };\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}