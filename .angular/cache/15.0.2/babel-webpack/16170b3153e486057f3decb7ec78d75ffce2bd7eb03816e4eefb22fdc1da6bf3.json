{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/authentication-data.service\";\nexport class InterceptorService {\n  constructor(autenticationService) {\n    this.autenticationService = autenticationService;\n  }\n  intercept(req, next) {\n    var accessToken = this.autenticationService.getToken();\n    if (req.url.indexOf('/api/auth/') > -1 && accessToken !== undefined) {\n      req = req.clone({\n        setHeaders: {\n          //'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD',\n          //'Content-Type': 'application/json',\n          //'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, X-Request-With',\n          Authorization: 'Bearer ${accessToken}'\n        }\n      });\n    }\n    console.log(\"Interceptor esta corriendo: \" + accessToken);\n    //console.trace();\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.AuthenticationDataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,oBAA8C;IAA9C,yBAAoB,GAApBA,oBAAoB;EAA8B;EACtEC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAEhD,IAAIC,WAAW,GAAG,IAAI,CAACJ,oBAAoB,CAACK,QAAQ,EAAE;IACtD,IAAGH,GAAG,CAACI,GAAG,CAACC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAIH,WAAW,KAAKI,SAAS,EAAC;MACjEN,GAAG,GAACA,GAAG,CAACO,KAAK,CAAC;QACZC,UAAU,EAAC;UACT;UACA,8BAA8B,EAAE,uCAAuC;UACvE;UACA;UACAC,aAAa,EAAE;;OAElB,CAAC;;IAEJC,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAACT,WAAW,CAAC;IACvD;IACA,OAAOD,IAAI,CAACW,MAAM,CAACZ,GAAG,CAAC;EACzB;EAAC;qBApBUJ,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAiB,SAAlBjB,kBAAkB;IAAAkB,YAFjB;EAAM","names":["InterceptorService","constructor","autenticationService","intercept","req","next","accessToken","getToken","url","indexOf","undefined","clone","setHeaders","Authorization","console","log","handle","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/services/interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationDataService } from 'src/app/services/authentication-data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor{\n\n  constructor(private autenticationService:AuthenticationDataService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    var accessToken = this.autenticationService.getToken();\n    if(req.url.indexOf('/api/auth/') > -1 && accessToken !== undefined){\n      req=req.clone({\n        setHeaders:{\n          //'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD',\n          //'Content-Type': 'application/json',\n          //'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, X-Request-With',\n          Authorization: 'Bearer ${accessToken}'\n        }\n      })\n    }\n    console.log(\"Interceptor esta corriendo: \"+accessToken);\n    //console.trace();\n    return next.handle(req);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}