{"ast":null,"code":"import { ClientData } from '../config/config-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/authentication-data.service\";\nexport class InterceptorService {\n  constructor(autenticationService) {\n    this.autenticationService = autenticationService;\n  }\n  intercept(req, next) {\n    var accessToken = this.autenticationService.getToken();\n    // LOGOUT\n    if (req.url.indexOf('/api/auth/logout') > -1) {\n      req = req.clone({\n        setHeaders: {\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, X-Request-With',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + accessToken\n        }\n      });\n      console.log(\"Interceptor: \" + req.url);\n    }\n    // AUTHENTICATION\n    else if (req.url.indexOf('/api/auth/') > -1) {\n      req = req.clone({\n        setHeaders: {\n          //'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          //'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n          //'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, X-Request-With',\n          'Access-Control-Allow-Origin': \"*\",\n          'Access-Control-Allow-Methods': '*',\n          'Access-Control-Allow-Headers': '*',\n          'Access-Control-Allow-Credentials': 'true',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"Interceptor: \" + req.url);\n    }\n    // GET DATA\n    else if (req.url.indexOf('/api/get/') > -1) {\n      req = req.clone({\n        setHeaders: {\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'GET',\n          'Access-Control-Allow-Headers': '*',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"Interceptor: \" + req.url);\n    }\n    // DELETE DATA\n    else if (req.url.indexOf('/api/delete/') > -1 && accessToken !== undefined) {\n      req = req.clone({\n        setHeaders: {\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'DELETE',\n          'Access-Control-Allow-Headers': '*',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + accessToken\n        }\n        //withCredentials: true//NO SE SI ES NECESARIO\n      });\n\n      console.log(\"Interceptor: \" + req.url);\n    }\n    // NEW DATA\n    else if (req.url.indexOf('/api/new/') > -1 && accessToken !== undefined) {\n      req = req.clone({\n        setHeaders: {\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Headers': '*',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + accessToken\n        } //,\n        //withCredentials: true//NO SE SI ES NECESARIO\n      });\n\n      console.log(\"Interceptor: \" + req.url);\n    }\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.AuthenticationDataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["ClientData","InterceptorService","constructor","autenticationService","intercept","req","next","accessToken","getToken","url","indexOf","clone","setHeaders","WEB_URL","console","log","undefined","handle","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/services/interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationDataService } from 'src/app/services/authentication-data.service';\nimport { ClientData } from '../config/config-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor{\n\n  constructor(private autenticationService:AuthenticationDataService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    var accessToken = this.autenticationService.getToken();\n    // LOGOUT\n    if(req.url.indexOf('/api/auth/logout') > -1){\n      req=req.clone({\n        setHeaders:{\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, X-Request-With',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+accessToken\n        }\n      })\n      console.log(\"Interceptor: \"+req.url);\n    }\n    // AUTHENTICATION\n    else if(req.url.indexOf('/api/auth/') > -1){\n      req=req.clone({\n        setHeaders:{\n          //'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          //'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n          //'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, X-Request-With',\n          'Access-Control-Allow-Origin': \"*\",\n          'Access-Control-Allow-Methods': '*',\n          'Access-Control-Allow-Headers': '*',\n          'Access-Control-Allow-Credentials': 'true',\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(\"Interceptor: \"+req.url);\n    }\n    // GET DATA\n    else if(req.url.indexOf('/api/get/') > -1){\n      req=req.clone({\n        setHeaders:{\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'GET',\n          'Access-Control-Allow-Headers': '*',\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(\"Interceptor: \"+req.url);\n    }\n    // DELETE DATA\n    else if(req.url.indexOf('/api/delete/' ) > -1 && accessToken !== undefined){\n      req=req.clone({\n        setHeaders:{\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'DELETE',\n          'Access-Control-Allow-Headers': '*',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+accessToken\n        },\n        //withCredentials: true//NO SE SI ES NECESARIO\n      })\n      console.log(\"Interceptor: \"+req.url);\n    }\n    // NEW DATA\n    else if(req.url.indexOf('/api/new/') > -1 && accessToken !== undefined){\n      req=req.clone({\n        setHeaders:{\n          'Access-Control-Allow-Origin': ClientData.WEB_URL,\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Headers': '*',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+accessToken\n        }//,\n        //withCredentials: true//NO SE SI ES NECESARIO\n      })\n      console.log(\"Interceptor: \"+req.url);\n    }\n\n\n    return next.handle(req);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}