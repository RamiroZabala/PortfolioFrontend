{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FormEducationComponent = class FormEducationComponent {\n  constructor(formBuilder, dataService, bootstrapApplication, ruta) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.bootstrapApplication = bootstrapApplication;\n    this.ruta = ruta;\n    this.Form = this.formBuilder.group({\n      //aca.....\n      form_title: [\"\", [Validators.required]],\n      form_description: [\"\", [Validators.required]],\n      form_period: [\"\", [Validators.required], [Validators.minLength]],\n      form_imgurl: [\"\", [Validators.required]],\n      deviceInfo: this.formBuilder.group({\n        deviceId: [\"\"],\n        deviceType: [\"DEVICE_TYPE_ANDROID\"],\n        notificationToken: [\"\"]\n      })\n    });\n  }\n  ngOnInit() {}\n  get Title() {\n    return this.Form.get(\"form_title\");\n  }\n  get Description() {\n    return this.Form.get(\"form_description\");\n  }\n  get Period() {\n    return this.Form.get(\"form_period\");\n  }\n  get ImgUrl() {\n    return this.Form.get(\"form_imgurl\");\n  }\n  onSend(event) {\n    event.preventDefault();\n    const body = {\n      //id:0,\n      title: this.Form.get('form_title')?.value,\n      description: this.Form.get('form_description')?.value,\n      period: this.Form.get('form_period')?.value,\n      img_icon: this.Form.get('form_imgurl')?.value\n    };\n    this.dataService.addEducation(body).subscribe(data => {\n      console.log(\"DATA:\" + JSON.stringify(data));\n    });\n    //\n    // Oculta el modal después de enviar el formulario\n    const modal = document.getElementById('educationModal');\n    const bootstrapModal = new bootstrap.Modal(modal);\n    bootstrapModal.hide();\n  }\n};\nFormEducationComponent = __decorate([Component({\n  selector: 'app-form-education',\n  templateUrl: './form-education.component.html',\n  styleUrls: ['./form-education.component.css']\n})], FormEducationComponent);\nexport { FormEducationComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGjCC,YACQC,WAAuB,EACvBC,WAAuB,EACvBC,oBAAyC,EACzCC,IAAW;IAHX,gBAAW,GAAXH,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,yBAAoB,GAApBC,oBAAoB;IACpB,SAAI,GAAJC,IAAI;IACV,IAAI,CAACC,IAAI,GAAC,IAAI,CAACJ,WAAW,CAACK,KAAK,CAC9B;MACE;MACAC,UAAU,EAAC,CAAC,EAAE,EAAC,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrCC,gBAAgB,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACU,QAAQ,CAAC,CAAC;MAC3CE,WAAW,EAAC,CAAC,EAAE,EAAC,CAACZ,UAAU,CAACU,QAAQ,CAAC,EAAC,CAACV,UAAU,CAACa,SAAS,CAAC,CAAC;MAC7DC,WAAW,EAAC,CAAC,EAAE,EAAC,CAACd,UAAU,CAACU,QAAQ,CAAC,CAAC;MACtCK,UAAU,EAAC,IAAI,CAACZ,WAAW,CAACK,KAAK,CAAC;QAChCQ,QAAQ,EAAC,CAAC,EAAE,CAAC;QACbC,UAAU,EAAC,CAAC,qBAAqB,CAAC;QAClCC,iBAAiB,EAAC,CAAC,EAAE;OACtB;KACF,CACF;EACH;EACAC,QAAQ,IAAU;EAElB,IAAIC,KAAK;IACP,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,YAAY,CAAC;EACpC;EACA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACf,IAAI,CAACc,GAAG,CAAC,kBAAkB,CAAC;EAC1C;EACA,IAAIE,MAAM;IACR,OAAO,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAC,aAAa,CAAC;EACrC;EACA,IAAIG,MAAM;IACR,OAAO,IAAI,CAACjB,IAAI,CAACc,GAAG,CAAC,aAAa,CAAC;EACrC;EAEAI,MAAM,CAACC,KAAW;IAChBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,IAAI,GAAG;MACT;MACAC,KAAK,EAAC,IAAI,CAACtB,IAAI,CAACc,GAAG,CAAC,YAAY,CAAC,EAAES,KAAK;MACxCC,WAAW,EAAC,IAAI,CAACxB,IAAI,CAACc,GAAG,CAAC,kBAAkB,CAAC,EAAES,KAAK;MACpDE,MAAM,EAAC,IAAI,CAACzB,IAAI,CAACc,GAAG,CAAC,aAAa,CAAC,EAAES,KAAK;MAC1CG,QAAQ,EAAC,IAAI,CAAC1B,IAAI,CAACc,GAAG,CAAC,aAAa,CAAC,EAAES;KACxC;IACH,IAAI,CAAC1B,WAAW,CAAC8B,YAAY,CAACN,IAAI,CAAC,CAACO,SAAS,CAAEC,IAAQ,IAAG;MACxDC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC;IACF;IACA;IACA,MAAMK,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IACvD,MAAMC,cAAc,GAAG,IAAIC,SAAS,CAACC,KAAK,CAACL,KAAK,CAAC;IACjDG,cAAc,CAACG,IAAI,EAAE;EACvB;CACD;AAxDY9C,sBAAsB,eANlCF,SAAS,CAAC;EACTiD,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GAEWjD,sBAAsB,CAwDlC;SAxDYA,sBAAsB","names":["Component","Validators","FormEducationComponent","constructor","formBuilder","dataService","bootstrapApplication","ruta","Form","group","form_title","required","form_description","form_period","minLength","form_imgurl","deviceInfo","deviceId","deviceType","notificationToken","ngOnInit","Title","get","Description","Period","ImgUrl","onSend","event","preventDefault","body","title","value","description","period","img_icon","addEducation","subscribe","data","console","log","JSON","stringify","modal","document","getElementById","bootstrapModal","bootstrap","Modal","hide","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/run/media/ramiro/Datos2/ArgentinaPrograma/Portfolio/Frontend/src/app/components/modal/form-education/form-education.component.ts"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/services/data.service';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-form-education',\n  templateUrl: './form-education.component.html',\n  styleUrls: ['./form-education.component.css']\n})\n\nexport class FormEducationComponent implements OnInit{\n  Form:FormGroup;\n\n  constructor(\n  private formBuilder:FormBuilder,\n  private dataService:DataService,\n  private bootstrapApplication:bootstrapApplication,\n  private ruta:Router){\n    this.Form=this.formBuilder.group(\n      {\n        //aca.....\n        form_title:[\"\",[Validators.required]],\n        form_description:[\"\",[Validators.required]],\n        form_period:[\"\",[Validators.required],[Validators.minLength]],\n        form_imgurl:[\"\",[Validators.required]],\n        deviceInfo:this.formBuilder.group({\n          deviceId:[\"\"],\n          deviceType:[\"DEVICE_TYPE_ANDROID\"],\n          notificationToken:[\"\"]\n        })\n      }\n    )\n  }\n  ngOnInit(): void {}\n\n  get Title(){\n    return this.Form.get(\"form_title\");\n  }\n  get Description(){\n    return this.Form.get(\"form_description\");\n  }\n  get Period(){\n    return this.Form.get(\"form_period\");\n  }\n  get ImgUrl(){\n    return this.Form.get(\"form_imgurl\");\n  }\n\n  onSend(event:Event){\n    event.preventDefault();\n    const body = {\n        //id:0,\n        title:this.Form.get('form_title')?.value,\n        description:this.Form.get('form_description')?.value,\n        period:this.Form.get('form_period')?.value,\n        img_icon:this.Form.get('form_imgurl')?.value\n      }\n    this.dataService.addEducation(body).subscribe((data:any)=>{\n      console.log(\"DATA:\" + JSON.stringify(data));\n    })\n    //\n    // Oculta el modal después de enviar el formulario\n    const modal = document.getElementById('educationModal');\n    const bootstrapModal = new bootstrap.Modal(modal);\n    bootstrapModal.hide();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}