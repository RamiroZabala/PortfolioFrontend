{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs';\nimport { AppConfig } from '../config/api-server';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    console.log(\"El servicio de autenticacion está corriendo\");\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(sessionStorage.getItem('currentUser') || '{}'));\n  }\n  /*logIn(credenciales:Credentials):Observable<any>{\n    return this.httpC.post(this.API_SERVER+\"login\", credenciales).pipe(map(data=>{\n      sessionStorage.setItem('currentUser', JSON.stringify(data));\n      this.currentUserSubject.next(data);\n      return data;\n    }))\n  }*/\n  logIn(creds) {\n    return this.httpC.post(AppConfig.API_SERVER_LOGIN, creds, AppConfig.HTTP_HEADER_CRED).pipe(map(response => {\n      //alert(\"authentication-DataTransfer.service\");\n      const body = response.body;\n      const headers = response.headers;\n      const bearerToken = headers.get('Authorization');\n      const token = bearerToken.replace('Bearer ', '');\n      localStorage.setItem('token', token);\n      return body;\n    }));\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  static #_ = this.ɵfac = function AuthenticationDataService_Factory(t) {\n    return new (t || AuthenticationDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationDataService,\n    factory: AuthenticationDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,MAAM;AAE1B,SAASC,SAAS,QAAQ,sBAAsB;;;AAMhD,OAAM,MAAOC,yBAAyB;EAIpCC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1D,IAAI,CAACC,kBAAkB,GAAC,IAAIR,eAAe,CAAMS,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,IAAG,IAAI,CAAC,CAAC;EAC5G;EACA;;;;;;;EAOAC,KAAK,CAACC,KAAiB;IACrB,OAAO,IAAI,CAACT,KAAK,CAACU,IAAI,CAACb,SAAS,CAACc,gBAAgB,EAAEF,KAAK,EAAEZ,SAAS,CAACe,gBAAgB,CAAC,CAACC,IAAI,CAACjB,GAAG,CAAEkB,QAAa,IAAI;MAC/G;MACA,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1B,MAAMC,OAAO,GAAGF,QAAQ,CAACE,OAAO;MAEhC,MAAMC,WAAW,GAAGD,OAAO,CAACE,GAAG,CAAC,eAAe,CAAE;MACjD,MAAMC,KAAK,GAAGF,WAAW,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;MAEhDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpC,OAAOJ,IAAI;IACb,CAAC,CAAC,CAAC;EACL;EACAQ,QAAQ;IACN,OAAOF,YAAY,CAACd,OAAO,CAAC,OAAO,CAAC;EACtC;EAAC;qBA9BUT,yBAAyB;EAAA;EAAA;WAAzBA,yBAAyB;IAAA0B,SAAzB1B,yBAAyB;IAAA2B,YAFxB;EAAM","names":["BehaviorSubject","map","AppConfig","AuthenticationDataService","constructor","httpC","console","log","currentUserSubject","JSON","parse","sessionStorage","getItem","logIn","creds","post","API_SERVER_LOGIN","HTTP_HEADER_CRED","pipe","response","body","headers","bearerToken","get","token","replace","localStorage","setItem","getToken","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/services/authentication-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs';\nimport { Credentials } from '../models/auth-model';\nimport { AppConfig } from '../config/api-server';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationDataService {\n\n  currentUserSubject: BehaviorSubject<any>;\n\n  constructor(private httpC:HttpClient) {\n    console.log(\"El servicio de autenticacion está corriendo\")\n    this.currentUserSubject=new BehaviorSubject<any>(JSON.parse(sessionStorage.getItem('currentUser')|| '{}'))\n  }\n  /*logIn(credenciales:Credentials):Observable<any>{\n    return this.httpC.post(this.API_SERVER+\"login\", credenciales).pipe(map(data=>{\n      sessionStorage.setItem('currentUser', JSON.stringify(data));\n      this.currentUserSubject.next(data);\n      return data;\n    }))\n  }*/\n  logIn(creds:Credentials):Observable<any>{\n    return this.httpC.post(AppConfig.API_SERVER_LOGIN, creds, AppConfig.HTTP_HEADER_CRED).pipe(map((response: any) => {\n      //alert(\"authentication-DataTransfer.service\");\n      const body = response.body;\n      const headers = response.headers;\n\n      const bearerToken = headers.get('Authorization')!;\n      const token = bearerToken.replace('Bearer ', '');\n\n      localStorage.setItem('token', token);\n      return body;\n    }))\n  }\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}