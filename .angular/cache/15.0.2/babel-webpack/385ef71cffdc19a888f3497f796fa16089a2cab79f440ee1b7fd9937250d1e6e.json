{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/data-workproject.service\";\nexport class FormWorkprojectComponent {\n  constructor(formBuilder, dataService) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.modalId = \"workprojectModal\";\n    this.modalTitle = \"Agregar Trabajo\";\n    this.modalSubmitText = \"Guardar\";\n    // DEFAULTS FORM INPUTS VALUES\n    this.entryId = -1;\n    this.defaultTitle = \"\";\n    this.defaultDescription = \"\";\n    this.defaultPeriod = \"2023\";\n    this.defaultImgUrl = \"\";\n    //\n    this.reloadHTML = () => {}; // inicialización por defecto\n    this.Form = new FormGroup({});\n  }\n  ngOnInit() {\n    this.Form = this.formBuilder.group({\n      //aca.....\n      form_title: [this.defaultTitle, [Validators.required]],\n      form_description: [this.defaultDescription, [Validators.required]],\n      form_period: [this.defaultPeriod, [Validators.required]],\n      form_imgurl: [this.defaultImgUrl, [Validators.required]],\n      //\n      deviceInfo: this.formBuilder.group({\n        deviceId: [\"\"],\n        deviceType: [\"DEVICE_TYPE_ANDROID\"],\n        notificationToken: [\"\"]\n      })\n    });\n  }\n  get Title() {\n    return this.Form.get(\"form_title\");\n  }\n  get Description() {\n    return this.Form.get(\"form_description\");\n  }\n  get Period() {\n    return this.Form.get(\"form_period\");\n  }\n  get ImgUrl() {\n    return this.Form.get(\"form_imgurl\");\n  }\n  get FormValid() {\n    return !this.Form.get(\"form_title\")?.errors && !this.Form.get(\"form_description\")?.errors && !this.Form.get(\"form_period\")?.errors && !this.Form.get(\"form_imgurl\")?.errors;\n  }\n  onSend(event) {\n    event.preventDefault();\n    const body = {\n      id: this.entryId,\n      title: this.Form.get('form_title')?.value,\n      description: this.Form.get('form_description')?.value,\n      period: this.Form.get('form_period')?.value,\n      img_icon: this.Form.get('form_imgurl')?.value\n    };\n    this.dataService.addWorkProject(body).subscribe(data => {\n      console.log(\"DATA:\" + JSON.stringify(data));\n      this.reloadHTML();\n    });\n  }\n  static #_ = this.ɵfac = function FormWorkprojectComponent_Factory(t) {\n    return new (t || FormWorkprojectComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WorkProjectDataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormWorkprojectComponent,\n    selectors: [[\"app-form-workproject\"]],\n    inputs: {\n      modalId: \"modalId\",\n      modalTitle: \"modalTitle\",\n      modalSubmitText: \"modalSubmitText\",\n      entryId: \"entryId\",\n      defaultTitle: \"defaultTitle\",\n      defaultDescription: \"defaultDescription\",\n      defaultPeriod: \"defaultPeriod\",\n      defaultImgUrl: \"defaultImgUrl\",\n      reloadHTML: \"reloadHTML\"\n    },\n    decls: 2,\n    vars: 0,\n    template: function FormWorkprojectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"form-workproject works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","FormWorkprojectComponent","constructor","formBuilder","dataService","ngOnInit","Form","group","form_title","defaultTitle","required","form_description","defaultDescription","form_period","defaultPeriod","form_imgurl","defaultImgUrl","deviceInfo","deviceId","deviceType","notificationToken","Title","get","Description","Period","ImgUrl","FormValid","errors","onSend","event","preventDefault","body","id","entryId","title","value","description","period","img_icon","addWorkProject","subscribe","data","console","log","JSON","stringify","reloadHTML","selectors","inputs","modalId","modalTitle","modalSubmitText","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/components/modal/form-workproject/form-workproject.component.ts","/home/ramiro/Documentos/Portfolio/Frontend/src/app/components/modal/form-workproject/form-workproject.component.html"],"sourcesContent":["import { Component, OnInit, Input} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { WorkProjectDataService } from 'src/app/services/data-workproject.service';\n\n@Component({\n  selector: 'app-form-workproject',\n  templateUrl: './form-workproject.component.html'\n})\n\nexport class FormWorkprojectComponent implements OnInit{\n  @Input() modalId = \"workprojectModal\";\n  @Input() modalTitle = \"Agregar Trabajo\";\n  @Input() modalSubmitText = \"Guardar\";\n  // DEFAULTS FORM INPUTS VALUES\n  @Input() entryId:Number = -1;\n  @Input() defaultTitle:String = \"\";\n  @Input() defaultDescription:String = \"\";\n  @Input() defaultPeriod:String = \"2023\";\n  @Input() defaultImgUrl:String = \"\";\n  //\n  @Input() reloadHTML: () => any = () => {}; // inicialización por defecto\n\n  Form:FormGroup = new FormGroup({});;\n\n  constructor(\n  private formBuilder:FormBuilder,\n  private dataService:WorkProjectDataService){\n\n  }\n\n  ngOnInit(){\n    this.Form=this.formBuilder.group(\n      {\n        //aca.....\n        form_title:       [this.defaultTitle,         [Validators.required]],\n        form_description: [this.defaultDescription,   [Validators.required]],\n        form_period:      [this.defaultPeriod,        [Validators.required]],\n        form_imgurl:      [this.defaultImgUrl,        [Validators.required]],\n        //\n        deviceInfo:this.formBuilder.group({deviceId:[\"\"], deviceType:[\"DEVICE_TYPE_ANDROID\"], notificationToken:[\"\"]})\n      }\n    )\n  }\n\n  get Title(){\n    return this.Form.get(\"form_title\");\n  }\n  get Description(){\n    return this.Form.get(\"form_description\");\n  }\n  get Period(){\n    return this.Form.get(\"form_period\");\n  }\n  get ImgUrl(){\n    return this.Form.get(\"form_imgurl\");\n  }\n  get FormValid(){\n    return (!this.Form.get(\"form_title\")?.errors && !this.Form.get(\"form_description\")?.errors && !this.Form.get(\"form_period\")?.errors && !this.Form.get(\"form_imgurl\")?.errors);\n  }\n\n  onSend(event:Event){\n    event.preventDefault();\n    const body = {\n        id: this.entryId,\n        title:this.Form.get('form_title')?.value,\n        description:this.Form.get('form_description')?.value,\n        period:this.Form.get('form_period')?.value,\n        img_icon:this.Form.get('form_imgurl')?.value\n      }\n    this.dataService.addWorkProject(body).subscribe((data:any)=>{\n      console.log(\"DATA:\" + JSON.stringify(data));\n      this.reloadHTML();\n    })\n  }\n}\n","<p>form-workproject works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}