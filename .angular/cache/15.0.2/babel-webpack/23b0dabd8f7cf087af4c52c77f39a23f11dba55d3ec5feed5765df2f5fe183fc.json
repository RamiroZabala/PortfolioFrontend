{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/data.service\";\nimport * as i3 from \"@angular/router\";\nexport class FormAboutComponent {\n  constructor(formBuilder, dataService, ruta) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.ruta = ruta;\n    this.modalId = \"aboutModal\";\n    this.modalTitle = \"Editar Información\";\n    this.modalSubmitText = \"Guardar\";\n    // DEFAULTS FORM INPUTS VALUES\n    this.defaultName = \"\";\n    this.defaultLongDescription = \"\";\n    this.defaultNationality = \"\";\n    this.defaultBirthDate = \"\";\n    this.defaultPfp = \"\";\n    this.Form = new FormGroup({});\n  }\n  ngOnInit() {\n    this.Form = this.formBuilder.group({\n      //aca.....\n      form_name: [this.defaultName, [Validators.required]],\n      form_description: [this.defaultLongDescription, [Validators.required]],\n      form_nationality: [this.defaultNationality, [Validators.required]],\n      form_birthdate: [this.defaultBirthDate, [Validators.required]],\n      form_profilepic: [this.defaultBirthDate, [Validators.required]],\n      //\n      deviceInfo: this.formBuilder.group({\n        deviceId: [\"\"],\n        deviceType: [\"DEVICE_TYPE_ANDROID\"],\n        notificationToken: [\"\"]\n      })\n    });\n  }\n  get Name() {\n    return this.Form.get(\"form_name\");\n  }\n  get LongDescription() {\n    return this.Form.get(\"form_description\");\n  }\n  get Nationality() {\n    return this.Form.get(\"form_nationality\");\n  }\n  get BirthDate() {\n    return this.Form.get(\"form_birthdate\");\n  }\n  get ProfilePic() {\n    return this.Form.get(\"form_profilepic\");\n  }\n  get FormValid() {\n    return !this.Form.get(\"form_name\")?.errors && !this.Form.get(\"form_description\")?.errors && !this.Form.get(\"form_nationality\")?.errors && !this.Form.get(\"form_birthdate\")?.errors && !this.Form.get(\"form_profilepic\")?.errors;\n  }\n  onSend(event) {\n    event.preventDefault();\n    const body = {\n      id: 0,\n      name: this.Form.get('form_name')?.value,\n      long_description: this.Form.get('form_description')?.value,\n      nationality: this.Form.get('form_nationality')?.value,\n      birthdate: this.Form.get('form_birthdate')?.value,\n      img_profile: this.Form.get('form_profilepic')?.value\n    };\n    this.dataService.addPerson(body).subscribe(data => {\n      console.log(\"DATA:\" + JSON.stringify(data));\n    });\n  }\n  static #_ = this.ɵfac = function FormAboutComponent_Factory(t) {\n    return new (t || FormAboutComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormAboutComponent,\n    selectors: [[\"app-form-about\"]],\n    inputs: {\n      modalId: \"modalId\",\n      modalTitle: \"modalTitle\",\n      modalSubmitText: \"modalSubmitText\",\n      defaultName: \"defaultName\",\n      defaultLongDescription: \"defaultLongDescription\",\n      defaultNationality: \"defaultNationality\",\n      defaultBirthDate: \"defaultBirthDate\",\n      defaultPfp: \"defaultPfp\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function FormAboutComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","FormAboutComponent","constructor","formBuilder","dataService","ruta","ngOnInit","Form","group","form_name","defaultName","required","form_description","defaultLongDescription","form_nationality","defaultNationality","form_birthdate","defaultBirthDate","form_profilepic","deviceInfo","deviceId","deviceType","notificationToken","Name","get","LongDescription","Nationality","BirthDate","ProfilePic","FormValid","errors","onSend","event","preventDefault","body","id","name","value","long_description","nationality","birthdate","img_profile","addPerson","subscribe","data","console","log","JSON","stringify","selectors","inputs","modalId","modalTitle","modalSubmitText","defaultPfp","decls","vars","template","encapsulation"],"sourceRoot":"","sources":["/run/media/ramiro/Datos2/ArgentinaPrograma/Portfolio/Frontend/src/app/components/modal/form-about/form-about.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-form-about',\n  templateUrl: './form-about.component.html'})\n\nexport class FormAboutComponent {\n  @Input() modalId = \"aboutModal\";\n  @Input() modalTitle = \"Editar Información\";\n  @Input() modalSubmitText = \"Guardar\";\n  // DEFAULTS FORM INPUTS VALUES\n  @Input() defaultName:String = \"\";\n  @Input() defaultLongDescription:String = \"\";\n  @Input() defaultNationality:String = \"\";\n  @Input() defaultBirthDate:String = \"\";\n  @Input() defaultPfp:String = \"\";\n\n  Form:FormGroup = new FormGroup({});;\n\n  constructor(\n  private formBuilder:FormBuilder,\n  private dataService:DataService,\n  private ruta:Router){\n\n  }\n\n  ngOnInit(){\n    this.Form=this.formBuilder.group(\n      {\n        //aca.....\n        form_name:       [this.defaultName,         [Validators.required]],\n        form_description: [this.defaultLongDescription,   [Validators.required]],\n        form_nationality:      [this.defaultNationality,        [Validators.required]],\n        form_birthdate:      [this.defaultBirthDate,        [Validators.required]],\n        form_profilepic:      [this.defaultBirthDate,        [Validators.required]],\n        //\n        deviceInfo:this.formBuilder.group({deviceId:[\"\"], deviceType:[\"DEVICE_TYPE_ANDROID\"], notificationToken:[\"\"]})\n      }\n    )\n  }\n\n  get Name(){\n    return this.Form.get(\"form_name\");\n  }\n  get LongDescription(){\n    return this.Form.get(\"form_description\");\n  }\n  get Nationality(){\n    return this.Form.get(\"form_nationality\");\n  }\n  get BirthDate(){\n    return this.Form.get(\"form_birthdate\");\n  }\n  get ProfilePic(){\n    return this.Form.get(\"form_profilepic\");\n  }\n  get FormValid(){\n    return (!this.Form.get(\"form_name\")?.errors && !this.Form.get(\"form_description\")?.errors && !this.Form.get(\"form_nationality\")?.errors && !this.Form.get(\"form_birthdate\")?.errors && !this.Form.get(\"form_profilepic\")?.errors);\n  }\n\n  onSend(event:Event){\n    event.preventDefault();\n    const body = {\n        id: 0,\n        name:this.Form.get('form_name')?.value,\n        long_description:this.Form.get('form_description')?.value,\n        nationality:this.Form.get('form_nationality')?.value,\n        birthdate:this.Form.get('form_birthdate')?.value,\n        img_profile:this.Form.get('form_profilepic')?.value\n      }\n    this.dataService.addPerson(body).subscribe((data:any)=>{\n      console.log(\"DATA:\" + JSON.stringify(data));\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}