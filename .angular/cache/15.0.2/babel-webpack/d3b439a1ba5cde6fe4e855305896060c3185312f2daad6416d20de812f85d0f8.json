{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject, tap } from 'rxjs';\nimport { ApiServerUrl } from '../config/config-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkProjectDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    this._refresh$ = new Subject();\n    this.httpHeaderOptions = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n      })\n    };\n  }\n  get refresh$() {\n    return this._refresh$;\n  }\n  // GETTERS ===========================================================================\n  getWorkProjectData() {\n    return this.httpC.get(ApiServerUrl.API_SERVER_GET + \"workprojects\").pipe(tap(data => console.log('WorkProjects -> GET -> OK', data)));\n  }\n  deleteWorkProject(id) {\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE + \"workproject/\" + id).pipe(tap(data => console.log('WorkProjects -> DELETE -> OK', data)));\n  }\n  addWorkProject(body) {\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW + \"workproject\", body).pipe(tap(() => {\n      this._refresh$.next();\n      console.log('WorkProjects -> POST -> OK', body);\n    }));\n  }\n  static #_ = this.ɵfac = function WorkProjectDataService_Factory(t) {\n    return new (t || WorkProjectDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkProjectDataService,\n    factory: WorkProjectDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,OAAO,EAAEC,GAAG,QAAO,MAAM;AAE9C,SAASC,YAAY,QAAQ,uBAAuB;;;AAKpD,OAAM,MAAOC,sBAAsB;EAgBjCC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IAdjB,cAAS,GAAG,IAAIL,OAAO,EAAQ;IAO/B,sBAAiB,GAAG;MAC1BM,OAAO,EAAE,IAAIP,WAAW,CAAC;QACvB,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE;OACjC;KACF;EAEuC;EAZxC,IAAIQ,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAYA;EACAC,kBAAkB;IAChB,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAcR,YAAY,CAACS,cAAc,GAAC,cAAc,CAAC,CAC3EC,IAAI,CAACX,GAAG,CAACY,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,IAAI,CAAC,CAAC,CAAC;EACtE;EACAG,iBAAiB,CAACC,EAAS;IACzB,OAAO,IAAI,CAACZ,KAAK,CAACa,MAAM,CAAChB,YAAY,CAACiB,iBAAiB,GAAC,cAAc,GAACF,EAAE,CAAC,CACvEL,IAAI,CAACX,GAAG,CAACY,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC,CAAC,CAAC;EACzE;EACAO,cAAc,CAACC,IAAgB;IAC7B,OAAO,IAAI,CAAChB,KAAK,CAACiB,IAAI,CAACpB,YAAY,CAACqB,cAAc,GAAC,aAAa,EAAEF,IAAI,CAAC,CACtET,IAAI,CACHX,GAAG,CAAC,MAAK;MACP,IAAI,CAACO,SAAS,CAACgB,IAAI,EAAE;MACrBV,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEM,IAAI,CAAC;IACjD,CAAC,CAAC,CACH;EACH;EAAC;qBAnCUlB,sBAAsB;EAAA;EAAA;WAAtBA,sBAAsB;IAAAsB,SAAtBtB,sBAAsB;IAAAuB,YAFrB;EAAM","names":["HttpHeaders","Subject","tap","ApiServerUrl","WorkProjectDataService","constructor","httpC","headers","refresh$","_refresh$","getWorkProjectData","get","API_SERVER_GET","pipe","data","console","log","deleteWorkProject","id","delete","API_SERVER_DELETE","addWorkProject","body","post","API_SERVER_NEW","next","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/services/workproject-data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, tap} from 'rxjs';\nimport { WorkProject } from '../models/models';\nimport { ApiServerUrl } from '../config/config-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProjectDataService {\n\n  private _refresh$ = new Subject<void>();\n\n  get refresh$(){\n    return this._refresh$;\n  }\n  \n\n  private httpHeaderOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n    })\n  };\n\n  constructor(private httpC:HttpClient) { }\n\n  // GETTERS ===========================================================================\n  getWorkProjectData():Observable<any>{\n    return this.httpC.get<WorkProject>(ApiServerUrl.API_SERVER_GET+\"workprojects\")\n      .pipe(tap(data => console.log('WorkProjects -> GET -> OK', data)))\n  }\n  deleteWorkProject(id:number):Observable<any>{\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE+\"workproject/\"+id)\n      .pipe(tap(data => console.log('WorkProjects -> DELETE -> OK', data)))\n  }\n  addWorkProject(body:WorkProject):Observable<any>{\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW+\"workproject\", body)\n    .pipe(\n      tap(() => {\n        this._refresh$.next();\n        console.log('WorkProjects -> POST -> OK', body);\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}