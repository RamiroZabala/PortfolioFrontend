{"ast":null,"code":"import { Subject, tap } from 'rxjs';\nimport { ApiServerUrl } from '../config/config-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SkillDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    this._refresh$ = new Subject();\n  }\n  get refresh$() {\n    return this._refresh$;\n  }\n  getHardSkillData() {\n    return this.httpC.get(ApiServerUrl.API_SERVER_GET + \"hardskill\").pipe(tap(data => console.log('HardSkills -> GET -> OK', data)));\n  }\n  getSoftSkillData() {\n    return this.httpC.get(ApiServerUrl.API_SERVER_GET + \"softskill\").pipe(tap(data => console.log('SoftSkills -> GET -> OK', data)));\n  }\n  deleteHardSkill(id) {\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE + \"hardskill/\" + id).pipe(tap(data => console.log('HardSkills -> DELETE -> OK', data)));\n  }\n  deleteSoftSkill(id) {\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE + \"softskill/\" + id).pipe(tap(data => console.log('SoftSkills -> DELETE -> OK', data)));\n  }\n  addHardSkill(body) {\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW + \"hardskill\", body).pipe(tap(() => {\n      this._refresh$.next();\n      console.log('HardSkills -> GET -> OK', body);\n    }));\n  }\n  addSoftSkill(body) {\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW + \"softskill\", body).pipe(tap(() => {\n      this._refresh$.next();\n      console.log('SoftSkills -> GET -> OK', body);\n    }));\n  }\n  static #_ = this.ɵfac = function SkillDataService_Factory(t) {\n    return new (t || SkillDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SkillDataService,\n    factory: SkillDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,EAAEC,GAAG,QAAO,MAAM;AAE9C,SAASC,YAAY,QAAQ,uBAAuB;;;AAKpD,OAAM,MAAOC,gBAAgB;EAO3BC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IANjB,cAAS,GAAG,IAAIL,OAAO,EAAQ;EAMC;EAJxC,IAAIM,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAIAC,gBAAgB;IACd,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAQP,YAAY,CAACQ,cAAc,GAAC,WAAW,CAAC,CAClEC,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC,CAAC,CAAC;EACpE;EACAG,gBAAgB;IACd,OAAO,IAAI,CAACV,KAAK,CAACI,GAAG,CAAQP,YAAY,CAACQ,cAAc,GAAC,WAAW,CAAC,CAClEC,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC,CAAC,CAAC;EACpE;EAEAI,eAAe,CAACC,EAAS;IACvB,OAAO,IAAI,CAACZ,KAAK,CAACa,MAAM,CAAChB,YAAY,CAACiB,iBAAiB,GAAC,YAAY,GAACF,EAAE,CAAC,CACrEN,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,IAAI,CAAC,CAAC,CAAC;EACvE;EACAQ,eAAe,CAACH,EAAS;IACvB,OAAO,IAAI,CAACZ,KAAK,CAACa,MAAM,CAAChB,YAAY,CAACiB,iBAAiB,GAAC,YAAY,GAACF,EAAE,CAAC,CACrEN,IAAI,CAACV,GAAG,CAACW,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,IAAI,CAAC,CAAC,CAAC;EACvE;EAEAS,YAAY,CAACC,IAAU;IACrB,OAAO,IAAI,CAACjB,KAAK,CAACkB,IAAI,CAACrB,YAAY,CAACsB,cAAc,GAAC,WAAW,EAAEF,IAAI,CAAC,CACpEX,IAAI,CACHV,GAAG,CAAC,MAAK;MACP,IAAI,CAACM,SAAS,CAACkB,IAAI,EAAE;MACrBZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,IAAI,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EACAI,YAAY,CAACJ,IAAU;IACrB,OAAO,IAAI,CAACjB,KAAK,CAACkB,IAAI,CAACrB,YAAY,CAACsB,cAAc,GAAC,WAAW,EAAEF,IAAI,CAAC,CACpEX,IAAI,CACHV,GAAG,CAAC,MAAK;MACP,IAAI,CAACM,SAAS,CAACkB,IAAI,EAAE;MACrBZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,IAAI,CAAC;IAC9C,CAAC,CAAC,CACH;EACL;EAAC;qBA5CYnB,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAwB,SAAhBxB,gBAAgB;IAAAyB,YAFf;EAAM","names":["Subject","tap","ApiServerUrl","SkillDataService","constructor","httpC","refresh$","_refresh$","getHardSkillData","get","API_SERVER_GET","pipe","data","console","log","getSoftSkillData","deleteHardSkill","id","delete","API_SERVER_DELETE","deleteSoftSkill","addHardSkill","body","post","API_SERVER_NEW","next","addSoftSkill","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/PortfolioFrontend/src/app/services/skill-data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, tap} from 'rxjs';\nimport { Skill } from '../models/models';\nimport { ApiServerUrl } from '../config/config-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillDataService {\n  private _refresh$ = new Subject<void>();\n\n  get refresh$(){\n    return this._refresh$;\n  }\n  \n  constructor(private httpC:HttpClient) { }\n\n  getHardSkillData():Observable<any>{\n    return this.httpC.get<Skill>(ApiServerUrl.API_SERVER_GET+\"hardskill\")\n      .pipe(tap(data => console.log('HardSkills -> GET -> OK', data)))\n  };\n  getSoftSkillData():Observable<any>{\n    return this.httpC.get<Skill>(ApiServerUrl.API_SERVER_GET+\"softskill\")\n      .pipe(tap(data => console.log('SoftSkills -> GET -> OK', data)))\n  };\n\n  deleteHardSkill(id:number):Observable<any>{\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE+\"hardskill/\"+id)\n      .pipe(tap(data => console.log('HardSkills -> DELETE -> OK', data)))\n  }\n  deleteSoftSkill(id:number):Observable<any>{\n    return this.httpC.delete(ApiServerUrl.API_SERVER_DELETE+\"softskill/\"+id)\n      .pipe(tap(data => console.log('SoftSkills -> DELETE -> OK', data)))\n  }\n\n  addHardSkill(body:Skill):Observable<any>{\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW+\"hardskill\", body)\n    .pipe(\n      tap(() => {\n        this._refresh$.next();\n        console.log('HardSkills -> GET -> OK', body);\n      })\n    )\n  }\n  addSoftSkill(body:Skill):Observable<any>{\n    return this.httpC.post(ApiServerUrl.API_SERVER_NEW+\"softskill\", body)\n    .pipe(\n      tap(() => {\n        this._refresh$.next();\n        console.log('SoftSkills -> GET -> OK', body);\n      })\n    )\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}