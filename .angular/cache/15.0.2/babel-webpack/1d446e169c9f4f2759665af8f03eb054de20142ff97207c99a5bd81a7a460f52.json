{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { DynamicComponentDirective } from 'src/app/directives/dynamic-component.directive';\nimport { SkillItemComponent } from '../skill-item/skill-item.component';\nlet SoftskillListComponent = class SoftskillListComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.category = \"\";\n    this.childComponents = [];\n  }\n  ngAfterViewInit() {\n    // HARD SKILLS\n    this.dataService.getSoftSkillData().subscribe(data => {\n      this.data = data.filter(data => data.category === this.category);\n      this.generateChildComponents(this.data);\n    });\n  }\n  generateChildComponents(data) {\n    const viewContainerRef = this.dynamic.viewContainerRef;\n    data.forEach(child => {\n      const containerRef = viewContainerRef.createComponent(SkillItemComponent);\n      containerRef.instance.id = child.id;\n      containerRef.instance.skillname = child.skillname;\n      containerRef.instance.value = child.value;\n      this.deleteItem = this.deleteItem.bind(this); ///////*\n      containerRef.instance.onDelete = this.deleteItem;\n      this.childComponents.push(containerRef);\n    });\n  }\n  deleteItem(id) {\n    this.dataService.deleteSoftSkill(id).subscribe(resp => {\n      console.log(\"deleteSoftSkill(): ERROR -> \" + resp);\n      // Filtro el array de componentes para encontrar el índice del componente con el id especificado\n      const index = this.childComponents.findIndex(c => c.instance.id === id);\n      // Si se encontró el componente, lo elimino\n      if (index !== -1) {\n        this.childComponents[index].destroy();\n        this.childComponents.splice(index, 1);\n      }\n    });\n  }\n};\n__decorate([ViewChild(DynamicComponentDirective)], SoftskillListComponent.prototype, \"dynamic\", void 0);\n__decorate([Input()], SoftskillListComponent.prototype, \"category\", void 0);\nSoftskillListComponent = __decorate([Component({\n  selector: 'app-softskill-list',\n  templateUrl: './hardskill-list.component.html'\n})], SoftskillListComponent);\nexport { SoftskillListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,EAA0DC,KAAK,QAAO,eAAe;AAClH,SAASC,yBAAyB,QAAQ,gDAAgD;AAE1F,SAASC,kBAAkB,QAAQ,oCAAoC;AAMhE,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IANtB,aAAQ,GAAS,EAAE;IAI5B,oBAAe,GAAwB,EAAE;EAEI;EAE7CC,eAAe;IACb;IACA,IAAI,CAACD,WAAW,CAACE,gBAAgB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACnD,IAAI,CAACA,IAAI,GAAGA,IAAI,CAACC,MAAM,CAAED,IAA2B,IAAKA,IAAI,CAACE,QAAQ,KAAK,IAAI,CAACA,QAAQ,CAAC;MACzF,IAAI,CAACC,uBAAuB,CAAC,IAAI,CAACH,IAAI,CAAC;IACzC,CAAC,CAAC;EACJ;EAEAG,uBAAuB,CAACH,IAAO;IAC7B,MAAMI,gBAAgB,GAAG,IAAI,CAACC,OAAO,CAACD,gBAAgB;IACtDJ,IAAI,CAACM,OAAO,CAAEC,KAAqD,IAAI;MACrE,MAAMC,YAAY,GAAGJ,gBAAgB,CAACK,eAAe,CAAMhB,kBAAkB,CAAC;MAC9Ee,YAAY,CAACE,QAAQ,CAACC,EAAE,GAAGJ,KAAK,CAACI,EAAE;MACnCH,YAAY,CAACE,QAAQ,CAACE,SAAS,GAAGL,KAAK,CAACK,SAAS;MACjDJ,YAAY,CAACE,QAAQ,CAACG,KAAK,GAAGN,KAAK,CAACM,KAAK;MACzC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;MAC9CP,YAAY,CAACE,QAAQ,CAACM,QAAQ,GAAG,IAAI,CAACF,UAAU;MAChD,IAAI,CAACG,eAAe,CAACC,IAAI,CAACV,YAAY,CAAC;IACzC,CAAC,CAAC;EACJ;EAEAM,UAAU,CAACH,EAAS;IAClB,IAAI,CAACf,WAAW,CAACuB,eAAe,CAACR,EAAE,CAAC,CAACZ,SAAS,CAACqB,IAAI,IAAE;MACnDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAACF,IAAI,CAAC;MAChD;MACA,MAAMG,KAAK,GAAG,IAAI,CAACN,eAAe,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACf,QAAQ,CAACC,EAAE,KAAKA,EAAE,CAAC;MACvE;MACA,IAAIY,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACN,eAAe,CAACM,KAAK,CAAC,CAACG,OAAO,EAAE;QACrC,IAAI,CAACT,eAAe,CAACU,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;;IAEzC,CAAC,CAAC;EACJ;CACD;AA1CuCK,YAArCtC,SAAS,CAACE,yBAAyB,CAAC,uDAAqC;AACjEoC,YAARrC,KAAK,EAAE,wDAAqB;AAFlBG,sBAAsB,eAJlCL,SAAS,CAAC;EACTwC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE;CACd,CAAC,GACWpC,sBAAsB,CA2ClC;SA3CYA,sBAAsB","names":["Component","ViewChild","Input","DynamicComponentDirective","SkillItemComponent","SoftskillListComponent","constructor","dataService","ngAfterViewInit","getSoftSkillData","subscribe","data","filter","category","generateChildComponents","viewContainerRef","dynamic","forEach","child","containerRef","createComponent","instance","id","skillname","value","deleteItem","bind","onDelete","childComponents","push","deleteSoftSkill","resp","console","log","index","findIndex","c","destroy","splice","__decorate","selector","templateUrl"],"sourceRoot":"","sources":["/run/media/ramiro/Datos2/ArgentinaPrograma/Portfolio/Frontend/src/app/components/aptitudes/hardskill-list/softskill-list.component.ts"],"sourcesContent":["import { Component, ViewChild, ComponentRef , ComponentFactoryResolver, AfterViewInit, Input} from '@angular/core';\nimport { DynamicComponentDirective } from 'src/app/directives/dynamic-component.directive';\nimport { DataService } from 'src/app/services/data.service';\nimport { SkillItemComponent } from '../skill-item/skill-item.component';\n\n@Component({\n  selector: 'app-softskill-list',\n  templateUrl: './hardskill-list.component.html'\n})\nexport class SoftskillListComponent implements AfterViewInit{\n  @ViewChild(DynamicComponentDirective) dynamic !:DynamicComponentDirective;\n  @Input() category:string =\"\";\n\n  data:any;\n\n  childComponents: ComponentRef<any>[] = [];\n\n  constructor(private dataService:DataService){}\n\n  ngAfterViewInit(): void {\n    // HARD SKILLS\n    this.dataService.getSoftSkillData().subscribe(data => {\n      this.data = data.filter((data: { category: string; }) => data.category === this.category);\n      this.generateChildComponents(this.data);\n    });\n  };\n\n  generateChildComponents(data:[]):void {\n    const viewContainerRef = this.dynamic.viewContainerRef;\n    data.forEach((child: {id: number, skillname: string, value: string}) => {\n      const containerRef = viewContainerRef.createComponent<any>(SkillItemComponent);\n      containerRef.instance.id = child.id;\n      containerRef.instance.skillname = child.skillname;\n      containerRef.instance.value = child.value;\n      this.deleteItem = this.deleteItem.bind(this); ///////*\n      containerRef.instance.onDelete = this.deleteItem;\n      this.childComponents.push(containerRef);\n    });\n  }\n\n  deleteItem(id:number){\n    this.dataService.deleteSoftSkill(id).subscribe(resp=>{\n      console.log(\"deleteSoftSkill(): ERROR -> \"+resp);\n      // Filtro el array de componentes para encontrar el índice del componente con el id especificado\n      const index = this.childComponents.findIndex(c => c.instance.id === id);\n      // Si se encontró el componente, lo elimino\n      if (index !== -1) {\n        this.childComponents[index].destroy();\n        this.childComponents.splice(index, 1);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}