{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/authentication-data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \" El email es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \" El formato del email es incorrecto \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_13_p_1_Template, 2, 0, \"p\", 15);\n    i0.ɵɵtemplate(2, LoginComponent_div_13_p_2_Template, 2, 0, \"p\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Email == null ? null : ctx_r1.Email.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Email == null ? null : ctx_r1.Email.hasError(\"email\"));\n  }\n}\nfunction LoginComponent_div_18_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \" La contrases\\u00F1a es requerida \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe tener al menos 8 car\\u00E1cteres \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_18_p_1_Template, 2, 0, \"p\", 15);\n    i0.ɵɵtemplate(2, LoginComponent_div_18_p_2_Template, 2, 0, \"p\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.Password == null ? null : ctx_r2.Password.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.Password == null ? null : ctx_r2.Password.errors == null ? null : ctx_r2.Password.errors[\"minlength\"]);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, dataService, ruta) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.ruta = ruta;\n    this.creds = {\n      email: '',\n      password: ''\n    };\n    this.FormG = this.formBuilder.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(8)]],\n      deviceInfo: this.formBuilder.group({\n        deviceId: [\"\"],\n        deviceType: [\"DEVICE_TYPE_ANDROID\"],\n        notificationToken: [\"\"]\n      })\n    });\n  }\n  ngOnInit() {}\n  get Email() {\n    return this.FormG.get(\"email\");\n  }\n  get Password() {\n    return this.FormG.get(\"password\");\n  }\n  login(form) {\n    this.dataService.logIn(this.creds).subscribe(data => {\n      console.log(\"DATA:\" + JSON.stringify(data));\n      this.ruta.navigate(['/']);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationDataService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 13,\n    consts: [[\"id\", \"signinModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"signinModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"signinModalLabel\", 1, \"modal-title\", \"fs-5\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"form2Example1\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"form2Example1\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\"], [4, \"ngIf\"], [\"for\", \"form2Example2\", 1, \"form-label\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"form2Example2\", \"minlength\", \"8\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"button\", \"button-full\", \"btnsing\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"SignIn\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          i0.ɵɵrestoreView(_r7);\n          const _r0 = i0.ɵɵreference(8);\n          return i0.ɵɵresetView(ctx.login(_r0));\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 14);\n        i0.ɵɵtext(20, \"Login\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.FormG);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.creds.email)(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, (ctx.Email == null ? null : ctx.Email.errors) && (ctx.Email == null ? null : ctx.Email.touched), (ctx.Email == null ? null : ctx.Email.errors) && (ctx.Email == null ? null : ctx.Email.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Email == null ? null : ctx.Email.errors) && (ctx.Email == null ? null : ctx.Email.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.creds.password)(\"ngClass\", i0.ɵɵpureFunction2(10, _c0, (ctx.Password == null ? null : ctx.Password.errors) && (ctx.Password == null ? null : ctx.Password.touched), (ctx.Password == null ? null : ctx.Password.errors) && (ctx.Password == null ? null : ctx.Password.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Password == null ? null : ctx.Password.errors) && (ctx.Password == null ? null : ctx.Password.touched));\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AACA,SAA6DA,UAAU,QAAQ,gBAAgB;;;;;;;;ICiBvEC,6BAA2D;IACvDA,uCACJ;IAAAA,iBAAI;;;;;IACJA,6BAAwD;IACpDA,oDACJ;IAAAA,iBAAI;;;;;IANRA,2BAA6C;IACzCA,mEAEI;IACJA,mEAEI;IACRA,iBAAM;;;;IANEA,eAAiC;IAAjCA,sFAAiC;IAGjCA,eAA8B;IAA9BA,mFAA8B;;;;;IAelCA,6BAA8D;IAC1DA,kDACJ;IAAAA,iBAAI;;;;;IAEJA,6BAA+D;IAC3DA,0EACJ;IAAAA,iBAAI;;;;;IAPRA,2BAAmD;IAC/CA,mEAEI;IAEJA,mEAEI;IACRA,iBAAM;;;;IAPEA,eAAoC;IAApCA,4FAAoC;IAIpCA,eAAqC;IAArCA,mIAAqC;;;;;;;;;AD9BjE,OAAM,MAAOC,cAAc;EAQzBC,YACQC,WAAuB,EACvBC,WAAqC,EACrCC,IAAW;IAFX,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IAVZ,UAAK,GAAe;MAClBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAQC,IAAI,CAACC,KAAK,GAAC,IAAI,CAACL,WAAW,CAACM,KAAK,CAC/B;MACEH,KAAK,EAAC,CAAC,EAAE,EAAC,CAACP,UAAU,CAACW,QAAQ,EAACX,UAAU,CAACO,KAAK,CAAC,CAAC;MACjDC,QAAQ,EAAC,CAAC,EAAE,EAAC,CAACR,UAAU,CAACW,QAAQ,EAACX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3DC,UAAU,EAAC,IAAI,CAACT,WAAW,CAACM,KAAK,CAAC;QAChCI,QAAQ,EAAC,CAAC,EAAE,CAAC;QACbC,UAAU,EAAC,CAAC,qBAAqB,CAAC;QAClCC,iBAAiB,EAAC,CAAC,EAAE;OACtB;KACF,CACF;EACH;EACAC,QAAQ,IAAU;EAElB,IAAIC,KAAK;IACP,OAAO,IAAI,CAACT,KAAK,CAACU,GAAG,CAAC,OAAO,CAAC;EAChC;EACA,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACX,KAAK,CAACU,GAAG,CAAC,UAAU,CAAC;EACnC;EAEAE,KAAK,CAACC,IAAW;IACf,IAAI,CAACjB,WAAW,CAACkB,KAAK,CAAC,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAAEC,IAAQ,IAAG;MACvDC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MAC3C,IAAI,CAACpB,IAAI,CAACyB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;EAAC;qBAtCU7B,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA8B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QCV3BnC,8BAA6G;QAIhDA,sBAAM;QAAAA,iBAAK;QAGhEA,8BAAwB;QACqBA;UAAAA;UAAA;UAAA,OAAYA,6BAAW;QAAA,EAAC;QAE7DA,8BAA+B;QACmBA,8BAAa;QAAAA,iBAAQ;QACnEA,6BAIC;QACDA,kEAOM;QACVA,iBAAM;QAENA,+BAA+B;QACmBA,yBAAQ;QAAAA,iBAAQ;QAC9DA,6BAKC;QACDA,kEAQM;QACVA,iBAAM;QAENA,mCAAiF;QAAAA,sBAAK;QAAAA,iBAAS;;;QAtC7FA,eAAmB;QAAnBA,qCAAmB;QAMbA,eAAuB;QAAvBA,yCAAuB;QAGrBA,eAAqC;QAArCA,sHAAqC;QAcvCA,eAA0B;QAA1BA,4CAA0B;QAIxBA,eAA2C;QAA3CA,kIAA2C","names":["Validators","i0","LoginComponent","constructor","formBuilder","dataService","ruta","email","password","FormG","group","required","minLength","deviceInfo","deviceId","deviceType","notificationToken","ngOnInit","Email","get","Password","login","form","logIn","creds","subscribe","data","console","log","JSON","stringify","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/components/modal/login/form-login.component.ts","/home/ramiro/Documentos/Portfolio/Frontend/src/app/components/modal/login/form-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { Credentials } from 'src/app/models/auth-model';\nimport { AuthenticationDataService } from 'src/app/services/authentication-data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './form-login.component.html'\n})\nexport class LoginComponent implements OnInit{\n  creds:Credentials = {\n    email: '',\n    password: ''\n  }\n\n  FormG:FormGroup;\n\n  constructor(\n  private formBuilder:FormBuilder,\n  private dataService:AuthenticationDataService,\n  private ruta:Router){\n    this.FormG=this.formBuilder.group(\n      {\n        email:[\"\",[Validators.required,Validators.email]],\n        password:[\"\",[Validators.required,Validators.minLength(8)]],\n        deviceInfo:this.formBuilder.group({\n          deviceId:[\"\"],\n          deviceType:[\"DEVICE_TYPE_ANDROID\"],\n          notificationToken:[\"\"]\n        })\n      }\n    )\n  }\n  ngOnInit(): void {}\n\n  get Email(){\n    return this.FormG.get(\"email\");\n  }\n  get Password(){\n    return this.FormG.get(\"password\");\n  }\n\n  login(form:NgForm){\n    this.dataService.logIn(this.creds).subscribe((data:any)=>{\n      console.log(\"DATA:\" + JSON.stringify(data));\n      this.ruta.navigate(['/']);\n    })\n  }\n}\n","<div class=\"modal fade\" id=\"signinModal\" tabindex=\"-1\" aria-labelledby=\"signinModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"signinModalLabel\">SignIn</h1>\n          <!--button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button-->\n        </div>\n        <div class=\"modal-body\">\n            <form [formGroup]=\"FormG\" #form=\"ngForm\" (ngSubmit)=\"login(form)\"> \n                <!-- Email -->\n                <div class=\"form-outline mb-4\">\n                    <label class=\"form-label\" for=\"form2Example1\">Email address</label>\n                    <input\n                        formControlName=\"email\" type=\"email\"id=\"form2Example1\" class=\"form-control\"\n                        [ngModel]=\"creds.email\"\n                        [ngClass]=\"{'is-invalid': Email?.errors && Email?.touched, 'is-valid':Email?.errors && Email?.touched}\"\n                    >\n                    <div *ngIf=\"Email?.errors && Email?.touched\">\n                        <p *ngIf=\"Email?.hasError('required')\" class=\"text-danger\">\n                            El email es requerido\n                        </p>\n                        <p *ngIf=\"Email?.hasError('email')\" class=\"text-danger\">\n                            El formato del email es incorrecto\n                        </p>\n                    </div>\n                </div>\n                <!-- Password -->\n                <div class=\"form-outline mb-4\">\n                    <label class=\"form-label\" for=\"form2Example2\">Password</label>\n                    <input \n                        formControlName=\"password\" type=\"password\" id=\"form2Example2\" class=\"form-control\"\n                        [ngModel]=\"creds.password\"\n                        [ngClass]=\"{'is-invalid': Password?.errors && Password?.touched, 'is-valid':Password?.errors && Password?.touched}\"\n                        minlength=\"8\"\n                    >\n                    <div *ngIf=\"Password?.errors && Password?.touched\">\n                        <p *ngIf=\"Password?.hasError('required')\" class=\"text-danger\">\n                            La contrasesña es requerida\n                        </p>\n                        <!--error video 21:17 https://argentinaprograma.inti.gob.ar/mod/page/view.php?id=2689&forceview=1-->\n                        <p *ngIf=\"Password?.errors?.['minlength']\" class=\"text-danger\">\n                            La contraseña debe tener al menos 8 carácteres\n                        </p>\n                    </div>\n                </div>\n                <!-- Submit -->\n                <button type=\"button\" class=\"button button-full btnsing\" data-bs-dismiss=\"modal\">Login</button>\n            </form>\n        </div>\n      </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}