{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    this.httpHeaderOptions = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n      })\n    };\n    this.API_SERVER = \"http://localhost:8080/\";\n    this.url = \"\";\n  }\n  IniciarSesion(credenciales) {\n    return this.http.post(this.url, credenciales).pipe(map(data => {\n      sessionStorage.setItem('currentUser', JSON.stringify(data));\n      this.currentUserSubject.next(data);\n      return data;\n    }));\n  }\n  get userAuth() {\n    return this.currentUserSubject.value;\n  }\n  static #_ = this.ɵfac = function AuthenticationDataService_Factory(t) {\n    return new (t || AuthenticationDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationDataService,\n    factory: AuthenticationDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,MAAM;;;AAM1B,OAAM,MAAOC,yBAAyB;EAWpCC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IATjB,sBAAiB,GAAG;MAC1BC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE;OACjC;KACF;IAEO,eAAU,GAAG,wBAAwB;IAM7C,QAAG,GAAC,EAAE;EAJkC;EAUxCO,aAAa,CAACC,YAAgB;IAC5B,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,GAAG,EAAEH,YAAY,CAAC,CAACI,IAAI,CAACV,GAAG,CAACW,IAAI,IAAE;MAC3DC,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MAC3D,IAAI,CAACK,kBAAkB,CAACC,IAAI,CAACN,IAAI,CAAC;MAClC,OAAOA,IAAI;IACb,CAAC,CAAC,CAAC;EAEL;EACA,IAAIO,QAAQ;IACV,OAAO,IAAI,CAACF,kBAAkB,CAACG,KAAK;EACtC;EAAC;qBA/BUlB,yBAAyB;EAAA;EAAA;WAAzBA,yBAAyB;IAAAmB,SAAzBnB,yBAAyB;IAAAoB,YAFxB;EAAM","names":["HttpHeaders","BehaviorSubject","map","AuthenticationDataService","constructor","httpC","headers","IniciarSesion","credenciales","http","post","url","pipe","data","sessionStorage","setItem","JSON","stringify","currentUserSubject","next","userAuth","value","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/services/authentication-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationDataService {\n\n  private httpHeaderOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n    })\n  };\n\n  private API_SERVER = \"http://localhost:8080/\";\n\n  constructor(private httpC:HttpClient) { }\n\n\n\n  url=\"\"\n  currentUserSubject: BehaviorSubject<any>;\n  constructor(private http:HttpClient) { \n    console.log(\"El servicio de autenticacion está corriendo\")\n    this.currentUserSubject=new BehaviorSubject<any>(JSON.parse(sessionStorage.getItem('currentUser')|| '{}'))\n  }\n  IniciarSesion(credenciales:any):Observable<any>{\n    return this.http.post(this.url, credenciales).pipe(map(data=>{\n      sessionStorage.setItem('currentUser', JSON.stringify(data));\n      this.currentUserSubject.next(data);\n      return data;\n    }))\n\n  }\n  get userAuth(){\n    return this.currentUserSubject.value;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}