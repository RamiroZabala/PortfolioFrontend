{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/api-server';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkProjectDataService {\n  constructor(httpC) {\n    this.httpC = httpC;\n    this.httpHeaderOptions = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n      })\n    };\n  }\n  // GETTERS ===========================================================================\n  getWorkProjectData() {\n    return this.httpC.get(AppConfig.API_SERVER_GET + \"workprojects\", this.httpHeaderOptions);\n  }\n  deleteWorkProject(id) {\n    return this.httpC.delete(AppConfig.API_SERVER_DELETE + \"workproject/\" + id);\n  }\n  addWorkProject(body) {\n    return this.httpC.post(AppConfig.API_SERVER_NEW + \"workproject\", body, {\n      withCredentials: true\n    });\n  }\n  static #_ = this.ɵfac = function WorkProjectDataService_Factory(t) {\n    return new (t || WorkProjectDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkProjectDataService,\n    factory: WorkProjectDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAI9D,SAASC,SAAS,QAAQ,sBAAsB;;;AAKhD,OAAM,MAAOC,sBAAsB;EASjCC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IAPjB,sBAAiB,GAAG;MAC1BC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvB,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE;OACjC;KACF;EAEuC;EAExC;EACAM,kBAAkB;IAChB,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAcN,SAAS,CAACO,cAAc,GAAC,cAAc,EAAE,IAAI,CAACC,iBAAiB,CAAC;EACrG;EACAC,iBAAiB,CAACC,EAAS;IACzB,OAAO,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACX,SAAS,CAACY,iBAAiB,GAAC,cAAc,GAACF,EAAE,CAAC;EACzE;EACAG,cAAc,CAACC,IAAgB;IAC7B,OAAO,IAAI,CAACX,KAAK,CAACY,IAAI,CAACf,SAAS,CAACgB,cAAc,GAAC,aAAa,EAAEF,IAAI,EAAE;MAAEG,eAAe,EAAE;IAAI,CAAE,CAAC;EACjG;EAAC;qBApBUhB,sBAAsB;EAAA;EAAA;WAAtBA,sBAAsB;IAAAiB,SAAtBjB,sBAAsB;IAAAkB,YAFrB;EAAM","names":["HttpHeaders","AppConfig","WorkProjectDataService","constructor","httpC","headers","getWorkProjectData","get","API_SERVER_GET","httpHeaderOptions","deleteWorkProject","id","delete","API_SERVER_DELETE","addWorkProject","body","post","API_SERVER_NEW","withCredentials","factory","providedIn"],"sourceRoot":"","sources":["/home/ramiro/Documentos/Portfolio/Frontend/src/app/services/workproject-data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable} from 'rxjs';\nimport { WorkProject } from '../models/models';\nimport { AppConfig } from '../config/api-server';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProjectDataService {\n\n  private httpHeaderOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD'\n    })\n  };\n\n  constructor(private httpC:HttpClient) { }\n\n  // GETTERS ===========================================================================\n  getWorkProjectData():Observable<any>{\n    return this.httpC.get<WorkProject>(AppConfig.API_SERVER_GET+\"workprojects\", this.httpHeaderOptions);\n  }\n  deleteWorkProject(id:number):Observable<any>{\n    return this.httpC.delete(AppConfig.API_SERVER_DELETE+\"workproject/\"+id);\n  }\n  addWorkProject(body:WorkProject):Observable<any>{\n    return this.httpC.post(AppConfig.API_SERVER_NEW+\"workproject\", body, { withCredentials: true });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}